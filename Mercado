#include <stdlib.h>
#include <stdio.h>
#include <conio.h>
#include "structs.h"  

void CadastrarProduto(struct Produto produto[], int *qnt){
	int i, novoProduto;
	
	printf("------------Cadrastro de Produtos-------------\n\n");
	printf("Quantos produtos deseja cadatrar ? ");
	scanf("%d", &novoProduto);
	system("cls");
	
	for(i = *qnt; i < (*qnt + novoProduto); i++){
		printf("------------Produto %d-------------\n\n", i+1);
		
		printf("Codigo do produto %d: ", i+1);
		scanf("%d", &produto[i].codigo);
	
		printf("Digite o nome do produto %d: ", i+1);
		scanf(" %50[^\n]", &produto[i].nome);
	
		printf("Digite o preco do produto %d: ", i+1);
		scanf("%f", &produto[i].preco);
		
		system("cls");
	}
	
	*qnt += novoProduto;
	 
	system("cls");
	printf("Produtos cadrastrados com sucesso !\n");
	system("pause");
	system("cls");
}

void ListarProdutos(struct Produto produto[], int qnt){
	int i;
	
	printf("------------Listando Produtos------------\n\n");
	
	if(qnt == 0){
		printf("Nenhum produto encontrado (volte na opcao 1 para cadastrar produtos).\n\n");
	}
	else{
		for(i = 0; i < qnt; i++){
			printf("PRODUTO %d\n\n", i+1);
			printf("Nome: %s\n", produto[i].nome);
            printf("Preco: %.2f\n", produto[i].preco);
            printf("Codigo: %d\n", produto[i].codigo);
            printf("----------------------------\n\n");
		}
	}
	system("pause");
	system("cls");
}

void VerificarSistema(struct Produto produto[], int qnt){
	
	FILE *arquivo = fopen("produtos.csv", "w");

    if (arquivo == NULL) {
        printf("Erro ao criar o arquivo!\n");
        return;
    }

    fprintf(arquivo, "Codigo;Nome;Preco\n");

    for (int i = 0; i < qnt; i++) {
        fprintf(arquivo,"%d;%s;%.2f\n", produto[i].codigo, produto[i].nome, produto[i].preco);
    }

    fclose(arquivo);

    printf("Arquivo 'produtos.csv' gerado com sucesso!\n");	
    system("produtos.csv");
    system("pause");
	system("cls");
}

void ComprarProdutos(struct Produto produto[], struct Carrinho carrinho[], int qnt, int *quant, int cod[]) {
    int i, j, codigoProd, encontrado, quantidadeAdicional, qtdDesejada;

    printf("------------Comprar Produtos------------\n\n");

    if (qnt == 0) {
        printf("Nenhum produto encontrado (volte na opcao 1 para cadastrar produtos).\n\n");
        system("pause");
        system("cls");
    } else {
        for (i = 0; i < qnt; i++) {
            printf("PRODUTO %d:\n\n", i + 1);
            printf("Nome: %s\n", produto[i].nome);
            printf("Preco: %.2f\n\n", produto[i].preco);
            printf("Codigo: %d\n", produto[i].codigo);
            printf("----------------------------\n\n");
        }

        printf("Quantos produtos deseja comprar (0 se nao deseja comprar)? ");
        scanf("%d", &qtdDesejada);

        if (qtdDesejada > qnt) {
            printf("\nNumero invalido para compra de produtos.\n\n");
            system("pause");
            system("cls");
        } else if (qtdDesejada == 0) {
            system("cls");
        } else {
            for (i = 0; i < qtdDesejada; i++) {
                printf("\nDigite o codigo do produto que deseja comprar: ");
                scanf("%d", &codigoProd);

                encontrado = 0;

                // Verifica se o produto já está no carrinho
                for (j = 0; j < *quant; j++) {
                    if (cod[j] == codigoProd) { 
                        printf("\nEsse produto ja esta no carrinho. Quantidade atual: %d\n", carrinho[j].quantidade);
                        printf("Digite a quantidade adicional que deseja comprar: ");
                        scanf("%d", &quantidadeAdicional);
                        carrinho[j].quantidade += quantidadeAdicional;
                        encontrado = 1;
                        break;
                    }
                }

                // Se o produto não foi encontrado no carrinho, adiciona como novo item
                if (!encontrado) {
                    for (j = 0; j < qnt; j++) {
                        if (produto[j].codigo == codigoProd) {
                            printf("\nQuantidade que deseja comprar: ");
                            scanf("%d", &carrinho[*quant].quantidade);
                            carrinho[*quant].produto = produto[j];
                            cod[*quant] = codigoProd;
                            (*quant)++; 
                            break;
                        }
                    }
                }
                printf("\n--------------------------------\n");
            }
            system("pause");
            system("cls");
        }
    }
}
void VizualizarCarrinho(struct Produto produto[], struct Carrinho carrinho[], int qnt, int quant, int cod[]) {
    int i, j;
    
    printf("------------Vizualizar Carrinho------------\n\n");
    
    if (quant == 0) {
        printf("Nenhum produto encontrado (volte na opcao 1 para cadastrar produtos).\n\n");    
    } else {
        for (i = 0; i < quant; i++) { 
            printf("Produto %d no carrinho: \n\n", i+1);
            for (j = 0; j < qnt; j++) {
                if (produto[j].codigo == cod[i]) {
                    printf("Nome: %s\n", produto[j].nome);
                    printf("Preco: %.2f\n", produto[j].preco);    
                    printf("Quantidade: %d\n", carrinho[i].quantidade);
                    printf("Codigo: %d\n", cod[i]);
                    break; 
                }
            }    
            printf("\n--------------------------------\n");    
        }    
    }
    system("pause");
    system("cls");        
}

void RemoverProdutos(struct Produto produto[], struct Carrinho carrinho[], int *quant, int cod[]) {
    int codigoProd, encontrado = 0, i, j;
    
    if (*quant == 0) {
        printf("Nenhum produto no carrinho para remover.\n");
        system("pause");
        return;
    }

    printf("Produtos no carrinho:\n");
    for (i = 0; i < *quant; i++) {
        printf("Produto %d:\n", i + 1);
        printf("Nome: %s\n", carrinho[i].produto.nome);
        printf("Codigo: %d\n", carrinho[i].produto.codigo);    
        printf("Quantidade: %d\n", carrinho[i].quantidade);
    }
    
    printf("\nDigite o codigo do produto que deseja remover: ");
    scanf("%d", &codigoProd);

    for (i = 0; i < *quant; i++) {
        if (carrinho[i].produto.codigo == codigoProd) {
            encontrado = 1;
            
            for (j = i; j < *quant - 1; j++) {
                carrinho[j] = carrinho[j + 1]; 
                cod[j] = cod[j + 1];  
            }
            
            (*quant)--;
            printf("Produto removido com sucesso!\n");
            break;
        }
    }

    if (!encontrado) {
        printf("Produto com o codigo %d nao encontrado no carrinho.\n", codigoProd);
    } 
    system("pause");
    system("cls");
}

void FinalizarPedido(struct Produto produto[], struct Carrinho carrinho[], int qnt, int *quant, int cod[]){
	int i, j;
	float soma = 0, valorItem;
	
	printf("------------Finalizar Pedido------------\n\n");
	
	 if(quant == 0){
        printf("Nenhum produto no carrinho para finalizar a compra.\n\n");
    } else {
        for(i = 0; i < *quant; i++){ 
            for(j = 0; j < qnt; j++){ 
                if(produto[j].codigo == cod[i]){
                    valorItem = produto[j].preco * carrinho[i].quantidade;
                    soma += valorItem; 
                    printf("\nProduto: %s\n", produto[j].nome);
                    printf("Preco unitario: %.2f\n", produto[j].preco);
                    printf("Quantidade: %d\n", carrinho[i].quantidade);
                    printf("Valor total do produto: %.2f\n", valorItem);
                    printf("\n--------------------------------\n");
                }
            }
        }
        printf("Valor total da compra: %.2f\n", soma);
        printf("\n--------------------------------\n");
        *quant = 0;
    }
    
    system("pause");
    system("cls");
}

void MenuPrincipal(struct Produto produto[], struct Carrinho carrinho[], int *qnt, int *quant, int cod[]){
	int cont = 1, opcao;
	
	while(cont){
		printf(" /$$      /$$                                               /$$                       /$$                /$$     /$$                   /$$           /$$ \n");  
		printf("| $$$    /$$$                                              | $$                      | $$                | $$   /$$/                   |_/           |_ /\n");          
		printf("| $$$$  /$$$$  /$$$$$$   /$$$$$$   /$$$$$$$  /$$$$$$   /$$$$$$$ /$$$$$$          /$$$$$$$  /$$$$$$        \  $$ /$$//$$   /$$  /$$$$$$  /$$ /$$$$$$$$ /$$ /$$$$$$$\n"); 
		printf("| $$ $$/$$ $$ /$$__  $$ /$$__  $$ /$$_____/ |____  $$ /$$__  $$/$$__  $$        /$$__  $$ /$$__  $$        \  $$$$/| $$  | $$ /$$__  $$| $$|____ /$$/| $$| $$__  $$\n");
		printf("| $$  $$$| $$| $$$$$$$$| $$  \__/| $$        /$$$$$$$| $$  | $$| $$   \ $$       | $$  | $$| $$   \ $$         \  $$/ | $$  | $$| $$  \__/ | $$   /$$$$/ | $$| $$   \ $$\n");
		printf("| $$\   $| $$| $$_____/| $$      | $$       /$$__  $$| $$  | $$| $$  | $$       | $$  | $$| $$  | $$         | $$  | $$  | $$| $$      | $$  /$$__/  | $$| $$  | $$\n");
		printf("| $$ \/  | $$|  $$$$$$$| $$      |  $$$$$$$|  $$$$$$$|  $$$$$$$|  $$$$$$/       |  $$$$$$$|  $$$$$$/         | $$  |  $$$$$$/| $$      | $$ /$$$$$$$$| $$| $$  | $$\n");
		printf("|__/     |__/ \_______/|__/         \_______/ \_______/   \_______/ \______/          \_______/ \______/           |__/    \______/ |__/      |__/|________/|__/|__/  |__/\n");
		       
		printf("----------------MENU PRINCIPAL-----------------\n\n");
		printf("  Digite qual das opcoes deseja acessar : \n");
		printf("\t[1] Cadastrar Produtos.\n\t[2] Listar Produtos.\n\t[3] Verificar Sistema.\n\t[4] Comprar Produtos.\n\t[5] Vizualizar Carrinho.\n\t[6] Remover Item.\n\t[7] Fechar Pedido.\n\t[8] Sair.\n");
		opcao = getch();
		system("cls");
		
		switch(opcao){
			case '1': 
				CadastrarProduto(produto, qnt);
				break;
			case '2':
				ListarProdutos(produto, *qnt);
				break;
			case '3':
				VerificarSistema(produto, *qnt);
				break;
			case '4':
				ComprarProdutos(produto, carrinho, *qnt, quant, cod);
				break;
			case '5': 
				VizualizarCarrinho(produto, carrinho, *qnt, *quant, cod);
				break;
			case '6':  
    			RemoverProdutos(produto, carrinho, quant, cod);
    			break;
			case '7':
				FinalizarPedido(produto, carrinho, *qnt, quant, cod);
				break;	
			case '8': 
				printf("__     __    _ _         ____                                _ \n");
				printf("\\ \\   / /__ | | |_ ___  / ___|  ___ _ __ ___  _ __  _ __ ___| |\n");
				printf(" \\ \\ / / _ \\| | __/ _ \\ \\___ \\ / _ \\ '_  _ \\| '_ \\| '__/ _ \\ |\n");
				printf("  \\ V / (_) | | ||  __/  ___) |  __/ | | | | | |_) | | |  __/_|\n");
				printf("   \\_/ \\___/|_|\\__\\___| |____/ \\___|_| |_| |_| .__/|_|  \\___(_)\n");
				printf("                                             |_|               \n");
				cont = 0;
				break;
			default:
				printf("Opcao invalida.\n");
				system("pause");
				system("cls");
				break;
		}
		
	}
}
int main(){
	struct Produto produto[50];
	struct Carrinho carrinho[50];
	int qnt = 0;
	int quant = 0;
	int cod[50];
	system("color 3");
	
	MenuPrincipal(produto, carrinho, &qnt, &quant, cod);
	
	return 0;
}
